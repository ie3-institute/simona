pekko {

  loggers = ["pekko.event.slf4j.Slf4jLogger"]
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "debug"
  logging-filter = "pekko.event.slf4j.Slf4jLoggingFilter"

  actor {

    // pekko supervision strategy for failure handling
    // https://pekko.apache.org/docs/pekko/current/typed/fault-tolerance.html
    // and https://pekko.apache.org/docs/pekko/current/general/supervision.html#user-guardian
    guardian-supervisor-strategy = "pekko.actor.StoppingSupervisorStrategy"

  }

  # For the sample, just bind to loopback and do not allow access from the network
  # the port is overridden by the logic in main class
  remote.artery {
    enabled = on
    transport = tcp
    canonical.port = 2551
    canonical.hostname = 127.0.0.1
  }


  coordinated-shutdown {
    phases {
      actor-system-terminate {
        timeout = 500 s // increased to allow file operations to terminate!
        depends-on = [before-actor-system-terminate]
      }
    }


  }
}