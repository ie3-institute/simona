include "../samples/common/pekko.conf"

pekko.loglevel = "info"

#########
# ATTENTION: Do not change this config file directly but use it as a base for your personal delta config for the
# vn_simona scenario! Delta configs can be created by including the config you want to change
# parameters from via include <path-to-config> (e.g. include "input/samples/vn_simona/vn_simona.conf") at the
# beginning of your config file and then just override the parameters you want to change!
#########

##################################################################
# Simulation Parameters
##################################################################
simona.simulationName = "Szenario-1-0"

##################################################################
# Time Parameters
##################################################################
simona.time.startDateTime = "2016-07-24T00:00:00Z"
simona.time.endDateTime = "2016-07-31T00:00:00Z"
simona.time.schedulerReadyCheckWindow = 900

##################################################################
# Congestion Management Configuration
##################################################################

simona.congestionManagement.enable = true
simona.congestionManagement.enableTransformerTapping = false
simona.congestionManagement.enableTopologyChanges = false
simona.congestionManagement.useFlexOptions = false

##################################################################
# Grid Configuration
##################################################################

simona.gridConfig.voltageLimits = [
    {vMin = 0.95, vMax = 1.05, voltLvls = [{id = "lv", vNom = "0.4 kV"}]},
    {vMin = 0.95, vMax = 1.05, voltLvls = [{id = "mv", vNom = "20 kV"}]},
    {vMin = 0.95, vMax = 1.05, voltLvls = [{id = "hv", vNom = "110 kV"}]},
]

##################################################################
# Input Parameters
##################################################################
simona.input.primary.csvParams = {
  directoryPath: "input/ma_thesis/fullGrid/primary"
  csvSep: ","
  isHierarchic: false
}
simona.input.grid.datasource.id = "csv"
simona.input.grid.datasource.csvParams = {
  directoryPath: "input/ma_thesis/fullGrid"
  csvSep: ","
  isHierarchic: false
}

simona.input.weather.datasource = {
  scheme = "icon"
  sampleParams.use = true
  coordinateSource.sampleParams.use = true
  maxCoordinateDistance = 50000
}

##################################################################
# Output Parameters
##################################################################
simona.output.base.dir = "output/ma_thesis"
simona.output.base.addTimestampToOutputDir = false

simona.output.sink.csv {
  fileFormat = ".csv"
  filePrefix = ""
  fileSuffix = ""
}

simona.output.grid = {
  notifier = "grid"
  nodes = true
  lines = true
  switches = true
  transformers2w = true
  transformers3w = false
  congestions = true
}
simona.output.participant.defaultConfig = {
  notifier = "default"
  powerRequestReply = false
  simulationResult = false
}
simona.output.participant.individualConfigs = [
  {
    notifier = "fixedfeedin"
    powerRequestReply = false
    simulationResult = true
  },
  {
    notifier = "load"
    powerRequestReply = false
    simulationResult = true
  }
]

simona.output.thermal = {
  defaultConfig = {
    notifier = "default",
    simulationResult = false
  }
  individualConfigs = []
}

##################################################################
# Runtime Configuration // todo refactor as this naming is misleading and partly unneeded
##################################################################
simona.runtime.selected_subgrids = []
simona.runtime.selected_volt_lvls = []

simona.runtime.participant.load = {
  defaultConfig = {
    calculateMissingReactivePowerWithModel = false
    uuids = ["default"]
    scaling = 1.0
    modelBehaviour = "fix"
    reference = "power"
  }
  individualConfigs = []
}

simona.runtime.participant.fixedFeedIn = {
  defaultConfig = {
    calculateMissingReactivePowerWithModel = false
    uuids = ["default"]
    scaling = 1.0
  }
  individualConfigs = []
}

simona.runtime.participant.pv = {
  defaultConfig = {
    calculateMissingReactivePowerWithModel = false
    uuids = ["default"]
    scaling = 1.0
  }
  individualConfigs = []
}

simona.runtime.participant.wec = {
  defaultConfig = {
    calculateMissingReactivePowerWithModel = false
    uuids = ["default"]
    scaling = 1.0
  }
  individualConfigs = []
}

simona.runtime.participant.evcs = {
  defaultConfig = {
    calculateMissingReactivePowerWithModel = false
    uuids = ["default"]
    scaling = 1.0
  }
  individualConfigs = []
}

simona.runtime.participant.hp = {
  defaultConfig = {
       calculateMissingReactivePowerWithModel = false
       uuids = ["default"]
       scaling = 1.0
  }
  individualConfigs = []
}

# # # # #
# ATTENTION: calculateMissingReactivePowerWithModel and scaling is ignored here.
# # # # #
simona.runtime.participant.em = {
  defaultConfig = {
    calculateMissingReactivePowerWithModel = false
    uuids = ["default"]
    scaling = 1.0
  }
  individualConfigs = []
}

##################################################################
# Event Configuration
##################################################################
simona.event.listener = []

##################################################################
# Power Flow Configuration
##################################################################
simona.powerflow.maxSweepPowerDeviation = 1E-5 // the maximum allowed deviation in power between two sweeps, before overall convergence is assumed
simona.powerflow.newtonraphson.epsilon = [1E-9]
simona.powerflow.newtonraphson.iterations = 50
simona.powerflow.resolution = "3600s"
simona.powerflow.stopOnFailure = true

simona.control.transformer = []
