import com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer

plugins {
  id 'groovy' // groovy support
  id 'java' // java support
  id 'scala' // scala support
  id 'signing'
  id 'maven-publish' // publish to a maven repo (local or mvn central, has to be defined)
  id 'pmd' // code check, working on source code
  id 'com.diffplug.spotless' version '6.25.0'// code format
  id "com.github.ben-manes.versions" version '0.51.0'
  id "de.undercouch.download" version "5.5.0" // downloads plugin
  id "kr.motd.sphinx" version "2.10.1" // documentation generation
  id "com.github.johnrengelman.shadow" version "8.1.1" // fat jar
  id "org.sonarqube" version "4.4.1.3373" // sonarqube
  id "org.scoverage" version "8.0.3" // scala code coverage scoverage
  id "com.github.maiflai.scalatest" version "0.32" // run scalatest without specific spec task
  id 'org.hidetake.ssh' version '2.11.2'
  id 'net.thauvin.erik.gradle.semver' version '1.0.4' // semantic versioning
}

ext {
  //version (changing these should be considered thoroughly!)
  javaVersion = JavaVersion.VERSION_17

  scalaVersion = '2.13'
  scalaBinaryVersion = '2.13.12'
  pekkoVersion = '1.0.2'
  jtsVersion = '1.19.0'
  confluentKafkaVersion = '7.4.0'
  tscfgVersion = '1.0.0'
  scapegoatVersion = '2.1.3'

  testContainerVersion = '0.41.2'

  scriptsLocation = 'gradle' + File.separator + 'scripts' + File.separator // location of script plugins
}

group = 'com.github.ie3-institute'
description = 'simona'

java {
  sourceCompatibility = javaVersion
  targetCompatibility = javaVersion
}

apply from: scriptsLocation + 'pmd.gradle'
apply from: scriptsLocation + 'spotless.gradle'
apply from: scriptsLocation + 'checkJavaVersion.gradle'
apply from: scriptsLocation + 'tscfg.gradle' // config tasks
apply from: scriptsLocation + 'documentation.gradle' // documentation tasks + configuration
apply from: scriptsLocation + 'tests.gradle' // tasks for tests
apply from: scriptsLocation + 'sonarqube.gradle' // sonarqube config
apply from: scriptsLocation + 'scoverage.gradle' // scoverage scala code coverage
apply from: scriptsLocation + 'deploy.gradle'
apply from: scriptsLocation + 'semVer.gradle'
apply from: scriptsLocation + 'mavenCentralPublish.gradle'

configurations {
  scalaCompilerPlugin
}

repositories {
  mavenCentral() // searches in Sonatype's central repository
  maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots' } // sonatype snapshot repo
  maven { url 'https://packages.confluent.io/maven' } // confluent repo (kafka)
}

dependencies {

  // ieÂ³ internal repository
  implementation('com.github.ie3-institute:PowerSystemUtils:2.0') {
    exclude group: 'org.apache.logging.log4j'
    exclude group: 'org.slf4j'
    /* Exclude our own nested dependencies */
    exclude group: 'com.github.ie3-institute'
  }
  implementation('com.github.ie3-institute:PowerSystemDataModel:4.1.0') {
    exclude group: 'org.apache.logging.log4j'
    exclude group: 'org.slf4j'
    /* Exclude our own nested dependencies */
    exclude group: 'com.github.ie3-institute'
  }
  implementation('com.github.ie3-institute:powerflow:0.2') {
    exclude group: 'org.apache.logging.log4j'
    exclude group: 'org.slf4j'
    /* Exclude our own nested dependencies */
    exclude group: 'edu.ie3'
  }

  implementation('com.github.ie3-institute:simonaAPI:0.4.0') {
    exclude group: 'org.apache.logging.log4j'
    exclude group: 'org.slf4j'
    /* Exclude our own nested dependencies */
    exclude group: 'edu.ie3'
  }

  /* logging */
  implementation "com.typesafe.scala-logging:scala-logging_${scalaVersion}:3.9.5" // pekko scala logging
  implementation "ch.qos.logback:logback-classic:1.4.14"

  /* testing */
  testImplementation 'org.spockframework:spock-core:2.3-groovy-4.0'
  testImplementation 'org.scalatestplus:mockito-3-4_2.13:3.2.10.0'
  testImplementation 'org.mockito:mockito-core:5.10.0' // mocking framework
  testImplementation "org.scalatest:scalatest_${scalaVersion}:3.2.18"
  testRuntimeOnly 'com.vladsch.flexmark:flexmark-all:0.64.8' //scalatest html output
  testImplementation group: 'org.pegdown', name: 'pegdown', version: '1.6.0'
  testImplementation "org.apache.pekko:pekko-testkit_${scalaVersion}:${pekkoVersion}" // pekko testkit
  testImplementation "org.apache.pekko:pekko-actor-testkit-typed_${scalaVersion}:${pekkoVersion}"

  // testcontainers
  testImplementation "com.dimafeng:testcontainers-scala-scalatest_${scalaVersion}:${testContainerVersion}"
  testImplementation "com.dimafeng:testcontainers-scala-postgresql_${scalaVersion}:${testContainerVersion}"
  testImplementation "com.dimafeng:testcontainers-scala-kafka_${scalaVersion}:${testContainerVersion}"

  /* --- Scala libs --- */
  /* CORE Scala */
  implementation "org.scala-lang:scala-library:${scalaBinaryVersion}"

  /* CORE Pekko */
  implementation "org.apache.pekko:pekko-actor_${scalaVersion}:${pekkoVersion}"
  implementation "org.apache.pekko:pekko-actor-typed_${scalaVersion}:${pekkoVersion}"
  implementation "org.apache.pekko:pekko-slf4j_${scalaVersion}:${pekkoVersion}"
  implementation "org.apache.pekko:pekko-connectors-csv_${scalaVersion}:${pekkoVersion}"

  /* config */
  implementation 'com.typesafe:config:1.4.3'
  implementation "com.github.carueda:tscfg_2.13:$tscfgVersion"
  implementation "com.github.scopt:scopt_${scalaVersion}:4.1.0" // cmd args parser

  // JTS
  implementation ("org.locationtech.jts:jts-core:${jtsVersion}"){
    exclude group: 'junit', module: 'junit'
  }
  implementation "org.locationtech.jts.io:jts-io-common:${jtsVersion}"

  /* Scala compiler plugin for static code analysis */
  implementation "com.sksamuel.scapegoat:scalac-scapegoat-plugin_${scalaBinaryVersion}:${scapegoatVersion}"
  scalaCompilerPlugin "com.sksamuel.scapegoat:scalac-scapegoat-plugin_${scalaBinaryVersion}:${scapegoatVersion}"

  /* Kafka */
  implementation "org.apache.kafka:kafka-clients:${confluentKafkaVersion}-ccs"
  implementation "io.confluent:kafka-streams-avro-serde:${confluentKafkaVersion}"
  implementation "com.sksamuel.avro4s:avro4s-core_${scalaVersion}:4.1.1"

  implementation 'org.apache.commons:commons-math3:3.6.1' // apache commons math3
  implementation 'org.apache.poi:poi-ooxml:5.2.5' // used for FilenameUtils
  implementation 'javax.measure:unit-api:2.2'
  implementation 'tech.units:indriya:2.2' // quantities
  implementation "org.typelevel:squants_${scalaVersion}:1.8.3"
  implementation 'org.apache.commons:commons-csv:1.10.0'
  implementation 'org.scalanlp:breeze_2.13:2.1.0' // scientific calculations (http://www.scalanlp.org/)
  implementation 'de.lmu.ifi.dbs.elki:elki:0.7.5' // Statistics (for random load model)
  implementation 'org.jgrapht:jgrapht-core:1.5.2'
  implementation 'org.apache.poi:poi-ooxml:5.2.3' // Reading xlsx files
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

jar {
  manifest {
    attributes(
        'Main-Class': 'edu.ie3.simona.main.RunSimonaStandalone'
        )
  }
}

//////////////////////////////////////////////////////////////////////
// Build pekko'able fat jar using the gradle shadow plugin
// see http://www.sureshpw.com/2015/10/building-akka-bundle-with-all.html
// and https://github.com/akka/akka/issues/24248
//////////////////////////////////////////////////////////////////////
shadowJar {
  transform(AppendingTransformer) {
    resource = 'reference.conf'
  }
  zip64 = true
  archiveBaseName.set('simona')
}



// scapegoat hook configuration
// https://github.com/sksamuel/scapegoat
// using compileScala instead of tasks.withType(ScalaCompile) prevents applying scapegoat to scala test classes
// see https://docs.gradle.org/current/userguide/scala_plugin.html#sec:configure_scala_classpath for details
tasks.withType(ScalaCompile) {
  scalaCompileOptions.additionalParameters = [
    "-Xplugin:" + configurations.scalaCompilerPlugin.asPath,
    "-P:scapegoat:dataDir:" + buildDir + "/reports/scapegoat/src/",
    "-P:scapegoat:disabledInspections:VariableShadowing",
    "-P:scapegoat:ignoredFiles:.*/SimonaConfig.scala" // see scapegoat-sbt page for this param
  ]
}

// separate scapegoat report for test classes
compileTestScala {
  scalaCompileOptions.additionalParameters = [
    "-Xplugin:" + configurations.scalaCompilerPlugin.asPath,
    "-P:scapegoat:dataDir:" + buildDir + "/reports/scapegoat/testsrc/",
    "-P:scapegoat:disabledInspections:VariableShadowing"
  ]
}

task printVersion {
  doLast {
    println project.version
  }
}
