import com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer

plugins {
  id 'groovy' // groovy support
  id 'java' // java support
  id 'scala' // scala support
  id 'signing'
  id 'maven-publish' // publish to a maven repo (local or mvn central, has to be defined)
  id 'pmd' // code check, working on source code
  id 'com.diffplug.spotless' version '6.9.0'// code format
  id 'com.github.onslip.gradle-one-jar' version '1.0.6' // pack a self contained jar
  id "com.github.ben-manes.versions" version '0.42.0'
  id "de.undercouch.download" version "5.1.0" // downloads plugin
  id "kr.motd.sphinx" version "2.10.1" // documentation generation
  id "com.github.johnrengelman.shadow" version "7.1.2" // fat jar
  id "org.sonarqube" version "3.4.0.2513" // sonarqube
  id "org.scoverage" version "7.0.0" // scala code coverage scoverage
  id "com.github.maiflai.scalatest" version "0.32" // run scalatest without specific spec task
  id 'org.hidetake.ssh' version '2.10.1'
  id 'net.thauvin.erik.gradle.semver' version '1.0.4' // semantic versioning
}

ext {
  //version (changing these should be considered thoroughly!)
  javaVersion = JavaVersion.VERSION_17

  scalaVersion = '2.13'
  scalaBinaryVersion = '2.13.8'
  akkaVersion = '2.6.19'
  jtsVersion = '1.19.0'
  tscfgVersion = '0.9.998'
  scapegoatVersion = '1.4.15'

  testContainerVersion = '0.40.10'

  scriptsLocation = 'gradle' + File.separator + 'scripts' + File.separator // location of script plugins
}

group = 'com.github.ie3-institute'
description = 'simona'
sourceCompatibility = javaVersion
targetCompatibility = javaVersion

apply from: scriptsLocation + 'pmd.gradle'
apply from: scriptsLocation + 'spotless.gradle'
apply from: scriptsLocation + 'checkJavaVersion.gradle'
apply from: scriptsLocation + 'tscfg.gradle' // config tasks
apply from: scriptsLocation + 'documentation.gradle' // documentation tasks + configuration
apply from: scriptsLocation + 'tests.gradle' // tasks for tests
apply from: scriptsLocation + 'sonarqube.gradle' // sonarqube config
apply from: scriptsLocation + 'scoverage.gradle' // scoverage scala code coverage
apply from: scriptsLocation + 'deploy.gradle'
apply from: scriptsLocation + 'semVer.gradle'
apply from: scriptsLocation + 'mavenCentralPublish.gradle'

configurations {
  scalaCompilerPlugin
}

repositories {
  mavenCentral() // searches in Sonatype's central repository
  maven { url 'https://www.jitpack.io' } // allows github repos as dependencies
  maven { url 'https://oss.sonatype.org/content/repositories/snapshots' } // sonatype snapshot repo
  maven { url "https://packages.confluent.io/maven" } // confluent repo (kafka)
}

dependencies {
  constraints {
    implementation( 'junit:junit:4.13.2+' ){
      because "CVE-2020-15250 - Temporary folder vulnerability - https://github.com/advisories/GHSA-269g-pwp5-87pp"
    }
  }

  // ieÂ³ internal repository
  implementation('com.github.ie3-institute:PowerSystemUtils:2.0-SNAPSHOT') {
    exclude group: 'org.apache.logging.log4j'
    exclude group: 'org.slf4j'
    /* Exclude our own nested dependencies */
    exclude group: 'com.github.ie3-institute'
  }
  implementation('com.github.ie3-institute:PowerSystemDataModel:3.0-SNAPSHOT') {
    exclude group: 'org.apache.logging.log4j'
    exclude group: 'org.slf4j'
    /* Exclude our own nested dependencies */
    exclude group: 'com.github.ie3-institute'
  }
  implementation('com.github.ie3-institute:powerflow:0.1') {
    exclude group: 'org.apache.logging.log4j'
    exclude group: 'org.slf4j'
    /* Exclude our own nested dependencies */
    exclude group: 'edu.ie3'
  }

  implementation('com.github.ie3-institute:simonaAPI:0.1-SNAPSHOT') {
    exclude group: 'org.apache.logging.log4j'
    exclude group: 'org.slf4j'
    /* Exclude our own nested dependencies */
    exclude group: 'edu.ie3'
  }

  /* logging */
  implementation "com.typesafe.scala-logging:scala-logging_${scalaVersion}:3.9.5" // akka scala logging
  implementation "ch.qos.logback:logback-classic:1.2.11"

  /* testing */
  testImplementation 'org.spockframework:spock-core:2.1-groovy-3.0'
  testImplementation 'org.scalatestplus:mockito-3-4_2.13:3.2.10.0'
  implementation 'org.mockito:mockito-core:4.6.1' // mocking framework
  testImplementation "org.scalatest:scalatest_${scalaVersion}:3.2.13"
  testRuntimeOnly 'com.vladsch.flexmark:flexmark-all:0.64.0' //scalatest html output
  testImplementation group: 'org.pegdown', name: 'pegdown', version: '1.6.0'
  testImplementation "com.typesafe.akka:akka-testkit_${scalaVersion}:${akkaVersion}" // akka testkit

  // testcontainers
  testImplementation "com.dimafeng:testcontainers-scala-scalatest_${scalaVersion}:${testContainerVersion}"
  testImplementation "com.dimafeng:testcontainers-scala-postgresql_${scalaVersion}:${testContainerVersion}"
  testImplementation "com.dimafeng:testcontainers-scala-kafka_${scalaVersion}:${testContainerVersion}"

  /* --- Scala libs --- */
  /* CORE Scala */
  implementation "org.scala-lang:scala-library:${scalaBinaryVersion}"

  /* CORE Akka */
  implementation "com.typesafe.akka:akka-actor_${scalaVersion}:${akkaVersion}"
  implementation "com.typesafe.akka:akka-slf4j_${scalaVersion}:${akkaVersion}"
  implementation "com.typesafe.akka:akka-cluster_${scalaVersion}:${akkaVersion}"
  implementation "com.lightbend.akka:akka-stream-alpakka-csv_${scalaVersion}:3.0.4"
  implementation "com.typesafe.akka:akka-actor_${scalaVersion}:${akkaVersion}"
  implementation "com.typesafe.akka:akka-cluster-sharding_${scalaVersion}:${akkaVersion}"
  implementation "com.typesafe.akka:akka-cluster-tools_${scalaVersion}:${akkaVersion}"

  /* config */
  implementation 'com.typesafe:config:1.4.2'
  implementation "com.github.carueda:tscfg_2.13:$tscfgVersion"
  implementation "com.github.scopt:scopt_${scalaVersion}:4.1.0" // cmd args parser

  // JTS
  implementation ("org.locationtech.jts:jts-core:${jtsVersion}"){
    exclude group: 'junit', module: 'junit'
  }
  implementation "org.locationtech.jts.io:jts-io-common:${jtsVersion}"

  /* Scala compiler plugin for static code analysis */
  implementation "com.sksamuel.scapegoat:scalac-scapegoat-plugin_${scalaBinaryVersion}:${scapegoatVersion}"
  scalaCompilerPlugin "com.sksamuel.scapegoat:scalac-scapegoat-plugin_${scalaBinaryVersion}:${scapegoatVersion}"

  /* Kafka */
  implementation group: 'org.apache.kafka', name: 'kafka-clients', version: '3.2.0'
  implementation 'io.confluent:kafka-streams-avro-serde:7.2.1'
  implementation "com.sksamuel.avro4s:avro4s-core_${scalaVersion}:4.1.0"

  implementation 'org.apache.commons:commons-math3:3.6.1' // apache commons math3
  implementation 'org.apache.poi:poi-ooxml:5.2.2' // used for FilenameUtils
  implementation 'javax.measure:unit-api:2.1.3'
  implementation 'tech.units:indriya:2.1.3' // quantities
  implementation 'org.apache.commons:commons-csv:1.9.0'
  implementation 'org.scalanlp:breeze_2.13:1.3' // scientific calculations (http://www.scalanlp.org/)
  implementation 'de.lmu.ifi.dbs.elki:elki:0.7.5' // Statistics (for random load model)
  implementation 'com.google.guava:guava:31.1-jre' // Building threads
  implementation 'org.jgrapht:jgrapht-core:1.5.1'
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

jar {
  manifest {
    attributes(
        'Main-Class': 'edu.ie3.simona.main.RunSimonaStandalone'
        )
  }
}

//////////////////////////////////////////////////////////////////////
// Build akka'able fat jar using the gradle shadow plugin
// see http://www.sureshpw.com/2015/10/building-akka-bundle-with-all.html
// and https://github.com/akka/akka/issues/24248
//////////////////////////////////////////////////////////////////////
shadowJar {
  transform(AppendingTransformer) {
    resource = 'reference.conf'
  }
  zip64 = true
  archiveBaseName.set('simona')
}



// scapegoat hook configuration
// https://github.com/sksamuel/scapegoat
// using compileScala instead of tasks.withType(ScalaCompile) prevents applying scapegoat to scala test classes
// see https://docs.gradle.org/current/userguide/scala_plugin.html#sec:configure_scala_classpath for details
tasks.withType(ScalaCompile) {
  scalaCompileOptions.additionalParameters = [
    "-Xplugin:" + configurations.scalaCompilerPlugin.asPath,
    "-P:scapegoat:dataDir:" + buildDir + "/reports/scapegoat/src/",
    "-P:scapegoat:disabledInspections:VariableShadowing",
    "-P:scapegoat:ignoredFiles:.*/SimonaConfig.scala" // see scapegoat-sbt page for this param
  ]
}

// separate scapegoat report for test classes
compileTestScala {
  scalaCompileOptions.additionalParameters = [
    "-Xplugin:" + configurations.scalaCompilerPlugin.asPath,
    "-P:scapegoat:dataDir:" + buildDir + "/reports/scapegoat/testsrc/",
    "-P:scapegoat:disabledInspections:VariableShadowing"
  ]
}

task printVersion {
  doLast {
    println project.version
  }
}
