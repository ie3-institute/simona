@startuml
'https://plantuml.com/class-diagram
skinparam linetype ortho

package ev-simulation {
    class ExtLink
    class ExternalSampleSim
    class EvModelImpl

    ' adding hidden elements for layout purposes
    class placeholderA {
        w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w
    }
    hide placeholderA

    class placeholderB {
        w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w
    }
    hide placeholderB

    ExtLink -[hidden]> placeholderA
    placeholderA -[hidden]> ExternalSampleSim
    ExternalSampleSim -[hidden]> placeholderB
    placeholderB -[hidden]> EvModelImpl
}

package simona-api {
    ' MIDDLE PART
    class ExtEvData {
        ~ LinkedBlockingQueue<EvDataResponseMessageToExt> receiveTriggerQueue
        - ActorRef dataService
        - ActorRef extSimAdapter
        + List<UUID> requestAvailablePublicEvCs()
        + List<EvModel> sendEvPositions(EvMovementsMessage evMovementsMessage)
        - void sendData(ExtEvMessage msg)
        + void queueExtMsg(ExtEvResponseMessage extEvResponse)
    }

    class ExtSimAdapterData {
        ~ LinkedBlockingQueue<ExtTrigger> receiveTriggerQueue
        - ActorRef extSimAdapter
        + void queueExtMsg(ExtTrigger trigger)
        + void send(ExtTriggerResponse msg)
    }

    interface ExtData

    abstract class ExtSimulation {
        + void setup(ExtSimAdapterData data, List<ExtData> adapters)
        + void run()
        # {abstract} List<Long> doActivity(long tick)
    }

    interface ExtEvSimulation {
        + void setExtEvData(ExtEvData evData)
    }

    interface ExtDataSimulation

    ExternalSampleSim --|> ExtSimulation
    ExternalSampleSim --|> ExtEvSimulation

    ExtSimulation -[hidden]> ExtDataSimulation
    ExtEvSimulation -|> ExtDataSimulation
    ExtEvSimulation --> ExtEvData

    ExtSimulation --> ExtData
    ExtSimulation --> ExtSimAdapterData

    ExtSimAdapterData -[hidden]> ExtEvData
    ExtData <|-- ExtEvData

    ' placeholder
    class plchldr1 {
        w-w-w-w-w
    }
    hide plchldr1
    class placeholder2 {
        w-w-w-w-w-w-w-w-w-w-w-w-w-w-w
    }
    hide placeholder2
    class placeholder3 {
        w-w-w-w-w-w-w-w-w-w-w
    }
    hide placeholder3
    class placeholder4 {
        w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w-w
    }
    hide placeholder4

    ExtData -[hidden]> plchldr1
    plchldr1 -[hidden]> placeholder4
    placeholder4 -[hidden]> EvMovement
    ExtSimulation -[hidden]-> placeholder2
    placeholder2 -[hidden]-> placeholder3
    placeholder3 -[hidden]-> ExtSimAdapterData
    placeholder2 -[hidden]> ExtData


    ' RIGHT PART
    abstract class EvMovement
    class Arrival
    class Departure
    Arrival --|> EvMovement
    Departure --|> EvMovement
    Arrival -[hidden]> Departure

    interface EvModel {
        + UUID getUuid()
        + String getId()
        + ComparableQuantity<Power> getSRated()
        + ComparableQuantity<Energy> getEStorage()
        + ComparableQuantity<Energy> getStoredEnergy()
        + EvModel copyWith(ComparableQuantity<Energy> newStoredEnergy)
    }

    ExtDataSimulation -[hidden]> Arrival
    EvMovement *-> EvModel
    EvModelImpl --|> EvModel


    interface EvDataMessageFromExt
    class EvMovementsMessage {
        - Map<UUID, List<EvMovement>> movements
    }
    class RequestEvcsFreeLots
    RequestEvcsFreeLots --|> EvDataMessageFromExt
    EvMovementsMessage --|> EvDataMessageFromExt
    RequestEvcsFreeLots -[hidden]> EvMovementsMessage

    interface EvDataResponseMessageToExt
    class AllDepartedEvsRepsonse {
        - Map<UUID, List<EvMovement>> movements
    }
    class ProvideEvcsFreeLots
    ProvideEvcsFreeLots --|> EvDataResponseMessageToExt
    AllDepartedEvsRepsonse --|> EvDataResponseMessageToExt
    ExtEvData -> EvDataMessageFromExt
    ExtEvData -> EvDataResponseMessageToExt
    EvMovement -[hidden]-> RequestEvcsFreeLots
    EvDataMessageFromExt -[hidden]> EvDataResponseMessageToExt
    EvMovementsMessage -[hidden]> ProvideEvcsFreeLots
    ProvideEvcsFreeLots -[hidden]> AllDepartedEvsRepsonse

    class ScheduleDataServiceMessage {
        - ExtEvDataService dataService
    }
    EvDataResponseMessageToExt -[hidden]> ScheduleDataServiceMessage
    ExtEvData -> ScheduleDataServiceMessage


    ' LEFT PART
    interface ExtLinkInterface {
        + ExtSimulation getExtSimulation()
        + List<ExtDataSimulation> getExtDataSimulations()
    }
    ExtLinkInterface -[hidden]> ExtSimulation
    ExtLink --|> ExtLinkInterface

    interface ExtTrigger
    class ActivationMessage {
        - Long tick
    }
    ActivationMessage --|> ExtTrigger

    interface ExtTriggerResponse
    class CompletionMessage {
        - Optional<Long> nextActivation
    }
    CompletionMessage --|> ExtTriggerResponse

    ExtTrigger -[hidden]> ExtTriggerResponse
    ExtTrigger <- ExtSimAdapterData
    ExtTriggerResponse <- ExtSimAdapterData
}

package simona {
    abstract class ParticipantAgent

    class EvcsModel

    class EvcsAgent

    interface SecondaryData
    class EvMovementData {
        movements: Set[EvMovement]
    }

    class SimonaSim

    class Scheduler

    class SimonaStandaloneSetup

    class ExtSimLoader

    class ExtSimAdapter

    class ExtEvDataService

    Scheduler -- SimonaSim
    SimonaSim *- SimonaStandaloneSetup
    SimonaStandaloneSetup *- ExtSimLoader

    ExtSimAdapter -- Scheduler
    ExtEvDataService -- Scheduler

    SecondaryData <|-- EvMovementData

    SimonaService <|- ExtEvDataService
    ExtEvData <--- ExtEvDataService

    ExtSimAdapterData <--- ExtSimAdapter

    ' 1 and n are swapped here due to bug with linetype ortho and labels
    ExtEvDataService "n" <-> "1" EvcsAgent
    EvcsAgent --|> ParticipantAgent
    EvcsAgent *- EvcsModel

    ExtSimAdapter -[hidden]> SimonaService
}

@enduml