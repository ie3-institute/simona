# Â© 2024. TU Dortmund University,
# Institute of Energy Systems, Energy Efficiency and Energy Economics,
# Research group Distribution grid planning and operation
#

name: CI

on:
  push:
    paths-ignore:
      - 'docs/**'
    branches:
      - main
      - dev
      - 'hotfix/*'
      - 'rel/*'
      - 'dependabot/*'
  pull_request:
    branches:
      - main
      - dev

jobs:
  buildAndTest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Check Branch
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            branchName="${{ github.head_ref }}"
          else
            branchName="${{ github.ref_name }}"
          fi

          if [[ "$branchName" == refs/heads/* ]]; then
            branchName="${branchName#refs/heads/}"
          fi

          ./gradlew checkBranchName -PbranchName="$branchName"

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Build Project
        run: ./gradlew --refresh-dependencies clean assemble spotlessCheck

      - name: Run Tests
        run: ./gradlew test reportScoverage checkScoverage

      - name: Build Scala-Docs
        run: ./gradlew scaladoc

      - name: SonarQube
        run: |
          ./gradlew sonar \
          -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }} \
          -Dsonar.host.url=${{ vars.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

          SONAR_STATUS_URL="${{ vars.SONAR_HOST_URL }}/api/qualitygates/project_status?projectKey=${{ vars.SONAR_PROJECT_KEY }}"
          QUALITY_GATE_STATUS=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" "$SONAR_STATUS_URL" | jq -r '.projectStatus.status')
            
          echo "Quality Gate Status: $QUALITY_GATE_STATUS"
          if [ "$QUALITY_GATE_STATUS" != "OK" ]; then
            echo "Quality Gate failed!"
            exit 1
          fi

      #Deployment
      - name: Deploy
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.MAVENCENTRAL_SIGNINGKEY }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.MAVENCENTRAL_SIGNINGKEYID }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.MAVENCENTRAL_SIGNINGPASS }}
          ORG_GRADLE_PROJECT_user: ${{ secrets.MAVENCENTRAL_USER }}
          ORG_GRADLE_PROJECT_password: ${{ secrets.MAVENCENTRAL_PASS }}
        run: |
          currentVersion=$(./gradlew -q devVersion)
          echo "currentVersion=$currentVersion"

          ./gradlew publish -PdeployVersion=$currentVersion
