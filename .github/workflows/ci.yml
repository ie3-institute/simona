# Â© 2024. TU Dortmund University,
# Institute of Energy Systems, Energy Efficiency and Energy Economics,
# Research group Distribution grid planning and operation
#

name: CI

on:
  push:
    paths-ignore:
      - 'docs/**'
    branches:
      - main
      - dev
      - 'hotfix/*'
      - 'rel/*'
      - 'dependabot/*'
  pull_request:
    branches:
      - main
      - dev

jobs:
  buildAndTest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Check Branch
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            branch_name="${{ github.head_ref }}"
          else
            branch_name="${{ github.ref_name }}"
          fi

          if [[ "$branch_name" == refs/heads/* ]]; then
            branch_name="${branch_name#refs/heads/}"
          fi
          
          echo "branch_name=$branch_name" >> $GITHUB_ENV
          
          ./gradlew checkBranchName -PbranchName="$branch_name"

      - name: Get Versions
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          REPO_URL="https://github.com/ie3-institute/simona.git"
          
          PR_VERSION=$(./gradlew -q currentVersion)
          echo "PR_VERSION=$PR_VERSION"
          echo "PR_VERSION=$PR_VERSION" >> $GITHUB_ENV
          
          #DEV-Version
          git clone --depth 1 --branch dev "$REPO_URL" dev-branch
          cd dev-branch
          DEV_VERSION=$(./gradlew -q currentVersion)
          cd ..
          echo "DEV_VERSION=$DEV_VERSION"
          echo "DEV_VERSION=$DEV_VERSION" >> $GITHUB_ENV
          rm -rf dev-branch
          
          #MAIN-Version
          git clone --depth 1 --branch main "$REPO_URL" main-branch
          cd main-branch
          MAIN_VERSION=$(./gradlew -q currentVersion)
          cd ..
          echo "MAIN_VERSION=$MAIN_VERSION"
          echo "MAIN_VERSION=$MAIN_VERSION" >> $GITHUB_ENV
          rm -rf main-branch

      - name: Version Check
        if: ${{ github.event_name == 'pull_request' }}
        env:
          BASE_BRANCH: ${{ github.event.pull_request.base.ref }}
        run: bash scripts/version_check.sh

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Build Project
        run: ./gradlew --refresh-dependencies clean assemble spotlessCheck

      - name: Run Tests
        run: ./gradlew test reportScoverage checkScoverage

      - name: Build Scala-Docs
        run: ./gradlew scaladoc

      - name: SonarQube
        run: |
          ./gradlew sonar \
          -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }} \
          -Dsonar.host.url=${{ vars.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.qualitygate.wait=true

      #Deployment
      - name: Deploy
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.MAVENCENTRAL_SIGNINGKEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.MAVENCENTRAL_SIGNINGPASS }}
          ORG_GRADLE_PROJECT_user: ${{ secrets.MAVENCENTRAL_USER }}
          ORG_GRADLE_PROJECT_password: ${{ secrets.MAVENCENTRAL_PASS }}
        run: |
          if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
            currentVersion=$(./gradlew -q currentVersion)
          else
            currentVersion=$(./gradlew -q devVersion)
          fi
          
          echo "currentVersion=$currentVersion"

          ./gradlew publish -PdeployVersion=$currentVersion
